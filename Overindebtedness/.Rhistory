(exp(0.1063)-1)*100
(exp(-0.1063)-1)*100
(-exp(0.1063)-1)*100
a <- matrix(c(0,1,3,2,0,.32,1,.5,0,.35,1.2,.4,.5,.3,.2,.1,.5,.2,0,-.1), byrow=T, nrow=5)
cl <- clara(a,2)
matplot(t(a),type="b", pch=20, col=cl$clustering)
a <- matrix(c(0,1,3,2,0,.32,1,.5,0,.35,1.2,.4,.5,.3,.2,.1,.5,.2,0,-.1), byrow=T, nrow=5)
install.packages("clara", dependencies=TRUE)
library(clara)
install.packages(c("cluster", "factoextra"))
library(cluster)
library(factoextra)
cl <- clara(a,2)
matplot(t(a),type="b", pch=20, col=cl$clustering)
View(cl)
install.packages(c("cluster", "factoextra"))
summary(cl)
a1 <- t(apply(a,1,scale))
a2 <- t(apply(a1,1,diff))
View(a)
View(a)
View(a1)
View(a2)
cl <- clara(a2,2)
summary(cl)
matplot(t(a),type="b", pch=20, col=cl$clustering)
anova
qf(0.95,1,2000)
# synthetically generated control charts
library(tidyr)
library(dtwclust)
library(dplyr)
library(ggplot2)
library(reshape)
df <- read.table("http://kdd.ics.uci.edu/databases/synthetic_control/synthetic_control.data",
header = FALSE)
install.packages("tidyr", dependencies = TRUE)
install.packages("tidyr", dependencies = TRUE)
install.packages("dplyr", dependencies = TRUE)
install.packages("dplyr", dependencies = TRUE)
View(df)
df_long <- gather(df[c(1:50),c(1:20)])
df_long$time <- rep(1:50,20)
View(df_long)
df_long  %>%
ggplot(aes(x= time, y= value, color= key)) +
geom_line( size=0.2) +
ggtitle("Control chart sequences") +
facet_wrap(~ key , scales = 'free_x', nrow= 2)
df_list <- as.list(utils::unstack(df_long, value ~ key))
df_list_z <- dtwclust::zscore(df_list)
#hierarchical clustering with 10% window size for up to k=10 clusters
cluster_dtw_h <-list()
for (i in 2:20)
{
cluster_dtw_h[[i]] <- tsclust(df_list_z, type = "h", k = i,  distance = "dtw", control = hierarchical_control(method = "complete"), seed = 390, preproc = NULL, args = tsclust_args(dist = list(window.size = 5L)))
}
# take a look at the object
cluster_dtw_h[[20]]
rmlist(ls())
rm(list = ls())
library(tidyr)
library(dtwclust)
library(dplyr)
library(ggplot2)
library(reshape)
df <- read.table("http://kdd.ics.uci.edu/databases/synthetic_control/synthetic_control.data",
header = FALSE)
# wide to long
df_long <- gather(df[c(1:50),c(1:20)])
# make a timepoint column
df_long$time <- rep(1:50,20)
# plot by key
df_long  %>%
ggplot(aes(x= time, y= value, color= key)) +
geom_line( size=0.2) +
ggtitle("Control chart sequences") +
facet_wrap(~ key , scales = 'free_x', nrow= 2)
df_list <- as.list(utils::unstack(df_long, value ~ key))
df_list_z <- dtwclust::zscore(df_list)
View(df_list_z)
cluster_dtw_h <-list()
for (i in 2:20)
{
cluster_dtw_h[[i]] <- tsclust(df_list_z, type = "h", k = i,  distance = "dtw", control = hierarchical_control(method = "complete"), seed = 390, preproc = NULL, args = tsclust_args(dist = list(window.size = 5L)))
}
cluster_dtw_h[[20]]
View(df_long)
cluster_dtw_h <-list()
for (i in 2:19)
{
cluster_dtw_h[[i]] <- tsclust(df_list_z, type = "h", k = i,  distance = "dtw", control = hierarchical_control(method = "complete"), seed = 390, preproc = NULL, args = tsclust_args(dist = list(window.size = 5L)))
}
cluster_dtw_h[[19]]
cluster_dtw_h[[4]]@clusinfoter_dtw_h[[4]]@clusinfo
# plot dendrogram for k= 4
plot(cluster_dtw_h[[4]])
install.packages("dtw", dependencies=TRUE)
install.packages("dtw", dependencies = TRUE)
#install.packages("dtw", dependencies=TRUE)
sc <- read.table("C:/Users/Arnaud/Downloads/synthetic_control.data", header=F, sep=”")
sc <- read.table("C:/Users/Arnaud/Downloads/synthetic_control.data", header=F, sep=")
rm(list = ls())
)
1
STOP
f
rm(list = ls())
sc <- read.table("C:/Users/Arnaud/Downloads/synthetic_control.data", header=F, sep="")
View(sc)
n <- 10
s <- sample(1:100, n)
idx <- c(s, 100+s, 200+s, 300+s, 400+s, 500+s)
sample2 <- sc[idx,]
observedLabels <- c(rep(1,n), rep(2,n), rep(3,n), rep(4,n), rep(5,n), rep(6,n))
View(sample2)
library(dtw)
distMatrix <- dist(sample2, method="DTW")
hc <- hclust(distMatrix, method="average")
plot(hc, labels=observedLabels, main="")
#install.packages("dtw", dependencies=TRUE)
rm(list = ls())
sc <- read.table("C:/Users/Arnaud/Downloads/synthetic_control.data", header=F, sep="")
# randomly sampled n cases from each class, to make it easy for plotting
n <- 10
s <- sample(1:100, n)
idx <- c(s, 100+s, 200+s, 300+s, 400+s, 500+s)
sample2 <- sc[idx,]
observedLabels <- c(rep(1,n), rep(2,n), rep(3,n), rep(4,n), rep(5,n), rep(6,n))
View(sample2)
rm(list = ls())
# synthetically generated control charts
# install.packages("tidyr", dependencies = TRUE)
# install.packages("dtwclust", dependencies = TRUE)
# install.packages("dplyr", dependencies = TRUE)
# install.packages("reshape", dependencies = TRUE)
library(tidyr)
library(dtwclust)
library(dplyr)
library(ggplot2)
library(reshape)
df <- read.table("http://kdd.ics.uci.edu/databases/synthetic_control/synthetic_control.data",
header = FALSE)
# wide to long
df_long <- gather(df[c(1:50),c(1:20)])
# make a timepoint column
df_long$time <- rep(1:50,20)
# plot by key
df_long  %>%
ggplot(aes(x= time, y= value, color= key)) +
geom_line( size=0.2) +
ggtitle("Control chart sequences") +
facet_wrap(~ key , scales = 'free_x', nrow= 2)
View(df_long)
df_list <- as.list(utils::unstack(df_long, value ~ key))
View(df_list)
rm(list = ls())
rm(list = ls())
library(tidyverse)
library(lubridate)
library(pwt9)
library(brotools)
install.packages("tidyverse")
install.packages("lubridate")
install.packages("pwt9")
install.packages("brotools")
install.packages("lubridate")
library(tidyverse)
library(lubridate)
library(pwt9)
library(brotools)
pwt <- pwt9.0 %>%
select(country, year, avh)
View(pwt)
pwt_wide <- pwt %>%
pivot_wider(names_from = year, values_from = avh)  %>%
filter(!is.na(`1950`)) %>%
mutate_at(vars(-country), as.numeric)
View(pwt_wide)
View(pwt_wide)
wss <- map_dbl(1:5, ~{kmeans(select(pwt_wide, -country), ., nstart=50,iter.max = 15 )$tot.withinss})
n_clust <- 1:5
elbow_df <- as.data.frame(cbind("n_clust" = n_clust, "wss" = wss))
ggplot(elbow_df) +
geom_line(aes(y = wss, x = n_clust), colour = "#82518c") +
theme_blog()
ggplot(elbow_df) +
geom_line(aes(y = wss, x = n_clust), colour = "#82518c")
clusters <- kmeans(select(pwt_wide, -country), centers = 3)
(centers <- rownames_to_column(as.data.frame(clusters$centers), "cluster"))
pwt_wide <- pwt_wide %>%
mutate(cluster = clusters$cluster)
pwt_long <- pwt_wide %>%
pivot_longer(cols=c(-country, -cluster), names_to = "year", values_to = "avh") %>%
mutate(year = ymd(paste0(year, "-01-01")))
centers_long <- centers %>%
pivot_longer(cols = -cluster, names_to = "year", values_to = "avh") %>%
mutate(year = ymd(paste0(year, "-01-01")))
ggplot() +
geom_line(data = pwt_long, aes(y = avh, x = year, group = country), colour = "#82518c") +
facet_wrap(~cluster, nrow = 1) +
geom_line(data = centers_long, aes(y = avh, x = year, group = cluster), col = "#b58900", size = 2) +
labs(title = "Average hours worked in several countries",
caption = "The different time series have been clustered using k-means.
Cluster 1: Belgium, Switzerland, Germany, Denmark, France, Luxembourg, Netherlands,
Norway, Sweden.\nCluster 2: Australia, Colombia, Ireland, Iceland, Japan, Mexico,
Portugal, Turkey.\nCluster 3: Argentina, Austria, Brazil, Canada, Cyprus, Spain, Finland,
UK, Italy, New Zealand, Peru, USA, Venezuela") +
theme(plot.caption = element_text(colour = "white"))
interactive_clustering(X_DSR_ihs)
# Arnaud NATAL
# University of Bordeaux
# arnaud.natal@u-bordeaux.fr
# Debt trend analysis
# April 28, 2022
#--- Introduction
rm(list = ls())
setwd("C:/Users/Arnaud/Documents/GitHub/Analysis/Overindebtedness")
#--- Install packages
# install.packages("tidyr", dependencies = TRUE)
# install.packages("dtwclust", dependencies = TRUE)
# install.packages("dplyr", dependencies = TRUE)
# install.packages('RStata')
#--- Open packages
library(tidyr)
library(dtwclust)
library(dplyr)
library(ggplot2)
library(RStata)
#--- Open datasets
data<-read.csv("debttrend.csv")
attach(data)
#--- Matrices creation
X_loan_ihs<-as.matrix(cbind(ihs_loanamount1,ihs_loanamount2,ihs_loanamount3))
X_income_ihs<-as.matrix(cbind(ihs_annualincome1,ihs_annualincome2,ihs_annualincome3))
X_assets_ihs<-as.matrix(cbind(ihs_assets_noland1,ihs_assets_noland2,ihs_assets_noland3))
X_expenses_ihs<-as.matrix(cbind(ihs_yearly_expenses1, ihs_yearly_expenses2, ihs_yearly_expenses3))
X_DSR_ihs<-as.matrix(cbind(ihs_DSR1,ihs_DSR2,ihs_DSR3))
X_DAR_ihs<-as.matrix(cbind(ihs_DAR1,ihs_DAR2,ihs_DAR3))
X_ISR_ihs<-as.matrix(cbind(ihs_ISR1,ihs_ISR2,ihs_ISR3))
# X_info_rel<-as.matrix(cbind(rel_informal1, rel_informal2, rel_informal3))
# X_form_rel<-as.matrix(cbind(rel_formal1, rel_formal2, rel_formal3))
# X_econ_rel<-as.matrix(cbind(rel_eco1, rel_eco2, rel_eco3))
# X_curr_rel<-as.matrix(cbind(rel_current1, rel_current2, rel_current3))
# X_huma_rel<-as.matrix(cbind(rel_humank1, rel_humank2, rel_humank3))
# X_soci_rel<-as.matrix(cbind(rel_social1, rel_social2, rel_social3))
# X_home_rel<-as.matrix(cbind(rel_home1, rel_home2, rel_home3))
# X_repa_rel<-as.matrix(cbind(rel_repay1, rel_repay2, rel_repay3))
#
# X_loan<-as.matrix(cbind(loanamount1,loanamount2,loanamount3))
# X_income<-as.matrix(cbind(annualincome1,annualincome2,annualincome3))
# X_assets<-as.matrix(cbind(assets_noland1,assets_noland2,assets_noland3))
# X_expenses<-as.matrix(cbind(yearly_expenses1, yearly_expenses2,yearly_expenses3))
# X_DSR<-as.matrix(cbind(DSR1,ihs_DSR2,DSR3))
# X_DAR<-as.matrix(cbind(DAR1,ihs_DAR2,DAR3))
# X_ISR<-as.matrix(cbind(ISR1,ihs_ISR2,ISR3))
#--- Trends analysis clustering
# interactive_clustering(X_income_ihs)
# interactive_clustering(X_assets_ihs)
# interactive_clustering(X_loan_ihs)
#
interactive_clustering(X_DSR_ihs)
interactive_clustering(X_DSR_ihs)
