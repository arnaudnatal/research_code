pollen<-read.table("C:/Users/Arnaud/Documents/lazar/forca.csv", header=TRUE, sep="," )
summary(pollen)
library(Factoshiny)
hello<-Factoshiny(pollen)
res.CA<-CA(pollen[,-c(1)],graph=FALSE)
summary(res.CA)
View(x)
View(res.CA)
View(newdataCAshiny)
View(listeChoixColourPoint)
Factoshiny(pollen)
res.CA<-CA(pollen[,-c(1)],graph=FALSE)
summary(res.CA)
res.CA<-CA(pollen[,-c(1)],graph=FALSE)
pollen<-read.table("C:/Users/Arnaud/Documents/lazar/forca.csv", header=TRUE, sep="," )
summary(pollen)
res.CA<-CA(pollen[,-c(1)],graph=FALSE)
summary(res.CA)
View(res.CA)
res.CA<-CA(pollen[,-c(1)],graph=FALSE, ncp=12)
summary(res.CA)
View(res.CA)
res.CA[["row"]][["coord"]]
coord<-res.CA[["row"]][["coord"]]
View(coord)
View(res.CA)
row_coord<-res.CA[["row"]][["coord"]]
row_contrib<-res.CA[["row"]][["contrib"]]
row_cos2<-res.CA[["row"]][["cos2"]]
row_inertia<-res.CA[["row"]][["inertia"]]
col_coord<-res.CA[["col"]][["coord"]]
col_contrib<-res.CA[["col"]][["contrib"]]
col_cos2<-res.CA[["col"]][["cos2"]]
col_inertia<-res.CA[["col"]][["inertia"]]
View(row_contrib)
library(Factoshiny)
library(writexl)
pollen<-read.table("C:/Users/Arnaud/Documents/lazar/familyraw.csv", header=TRUE, sep="," )
Factoshiny(pollen)
library(Factoshiny)
library(writexl)
pollen<-read.table("C:/Users/Arnaud/Documents/lazar/forca.csv", header=TRUE, sep="," )
Factoshiny(pollen)
#https://www.youtube.com/watch?v=2P-u8XlFFoc
#install.packages("Factoshiny")
#install.packages("writexl")
# 35 period of times
# 38 taxa
# 45 families
#  7 groups
library(Factoshiny)
library(writexl)
pollen<-read.table("C:/Users/Arnaud/Documents/lazar/forca.csv", header=TRUE, sep="," )
Factoshiny(pollen)
pollen<-read.table("C:/Users/Arnaud/Documents/lazar/familyraw.csv", header=TRUE, sep="," )
Factoshiny(pollen)
View(newdataCAshiny)
View(pollen)
View(pollen)
View(pollen)
View(pollen)
res.CA<-CA(pollen[,-c(1)],graph=FALSE, ncp=10)
summary(res.CA)
Factoshiny(pollen)
res.CA<-CA(pollen[,-c(1)],graph=FALSE, ncp=6)
pollen<-read.table("C:/Users/Arnaud/Documents/lazar/familyraw.csv", header=TRUE, sep="," )
res.CA<-CA(pollen[,-c(1)],graph=FALSE, ncp=6)
summary(res.CA)
res.CA[["row"]][["coord"]]
res.CA[["row"]][["contrib"]]
res.CA[["row"]][["contrib"]]
res.CA[["col"]][["coord"]]
res.CA[["col"]][["contrib"]]
Factoshiny(pollen)
Factoshiny(pollen)
View(pollen)
# Arnaud NATAL
# University of Bordeaux
# arnaud.natal@u-bordeaux.fr
# Debt trend analysis
# December 23, 2022
#--- Introduction
rm(list = ls())
setwd("C:/Users/Arnaud/Documents/GitHub/research_code/measuringdebt")
#--- Install packages
# install.packages("tidyr", dependencies = TRUE)
# install.packages("dtwclust", dependencies = TRUE)
# install.packages("dplyr", dependencies = TRUE)
# install.packages('RStata')
#--- Open packages
library(tidyr)
library(dtwclust)
library(dplyr)
library(ggplot2)
# library(RStata)
#--- Open datasets
data<-read.csv("debtnew.csv")
attach(data)
rm(list = ls())
setwd("C:/Users/Arnaud/Documents/GitHub/research_code/measuringdebt")
#--- Install packages
# install.packages("tidyr", dependencies = TRUE)
# install.packages("dtwclust", dependencies = TRUE)
# install.packages("dplyr", dependencies = TRUE)
# install.packages('RStata')
#--- Open packages
library(tidyr)
library(dtwclust)
library(dplyr)
library(ggplot2)
#--- Open datasets
data<-read.csv("debtnew.csv")
attach(data)
# Arnaud NATAL
# University of Bordeaux
# arnaud.natal@u-bordeaux.fr
# Debt trend analysis
# December 23, 2022
#--- Introduction
rm(list = ls())
setwd("C:/Users/Arnaud/Documents/GitHub/research_code/measuringdebt")
#--- Install packages
# install.packages("tidyr", dependencies = TRUE)
# install.packages("dtwclust", dependencies = TRUE)
# install.packages("dplyr", dependencies = TRUE)
# install.packages('RStata')
#--- Open packages
library(tidyr)
library(dtwclust)
library(dplyr)
library(ggplot2)
# library(RStata)
#--- Open datasets
data<-read.csv("debtnew.csv")
attach(data)
#--- Matrices creation
X_finindex<-as.matrix(cbind(finindex2010,finindex2016,finindex2020))
X_isr<-as.matrix(cbind(isr2010,isr2016,isr2020))
X_tdr<-as.matrix(cbind(tdr2010,tdr2016,tdr2020))
X_income<-as.matrix(cbind(dailyincome4_pc2010,dailyincome4_pc2016,dailyincome4_pc2020))
X_assets<-as.matrix(cbind(assets_total2010,assets_total2016,assets_total2020))
interactive_clustering(X_finindex)
